"""

ariel@cafepertodacasadanathalia
19/01/2022

Plots simulated spectra for bagpipes models generated by simulate_spectra.py

"""

import numpy as np
import matplotlib.pyplot as plt
from astropy.table import Table
import seaborn as sns

sns.set_style('ticks')

data_dir = '/home/ariel/Workspace/GASP/HST/Data/simulated_spectra/'
test_table = Table.read(data_dir + 'test_table.fits')

logUs = [-2, -2.25, -2.5, -2.75, -3, -3.25, -3.5]
Avs = [0, 0.2, 0.4, 0.6, 0.8, 1, 2, 2.5]
metallicities = [0.005, 0.002, 0.02, 0.2, 0.4, 1., 2.5, 5.]

# Plot spectra for different metallicities

Av = 0
logU = -2.5

colors = sns.color_palette('viridis', len(metallicities))

for i in range(len(metallicities)):
    # wl, flux = np.genfromtxt('/home/ariel/Workspace/GASP/HST/Data/simulated_spectra/dust' + str(Av) + '_logU' +
    #                          str(logU) + '_metal' + str(metallicities[i]) + '.spec').transpose()
    wl, flux = np.genfromtxt('/home/ariel/Workspace/GASP/HST/Data/simulated_spectra/dust' + str(Av) + '_logU' +
                              str(logU) + '_metal' + str(metallicities[i]) + '_weirdcase.spec').transpose()
    plt.plot(wl, flux, color=colors[i], label=r'Metallicity = ' + str(metallicities[i]))

plt.legend()
plt.show()

# colors = sns.color_palette('viridis', len(Avs))
#
# plt.scatter(test_table['Nii'], test_table['F275W']-test_table['F680N'], s=50, c=test_table['Av'], cmap='viridis')
#
# for i in range(len(Avs)):
#     flag = test_table['Av'] == Avs[i]
#     plt.plot(test_table['Nii'][flag], test_table['F275W'][flag]-test_table['F680N'][flag], c=colors[i])
#
# colors = sns.color_palette('viridis', len(Avs))
#
# plt.scatter(test_table['Ha'], test_table['F275W']-test_table['F680N'], s=50, c=test_table['Av'], cmap='viridis')
#
# for i in range(len(Avs)):
#     flag = test_table['Av'] == Avs[i]
#     plt.plot(test_table['Ha'][flag], test_table['F275W'][flag]-test_table['F680N'][flag], c=colors[i])
#
#
# fig, ax = plt.subplots(2, 2, figsize=(10, 10))
#
# mappable = ax[0, 0].scatter(test_table['logU'], test_table['Ha'], c=test_table['Av'])
# plt.colorbar(mappable=mappable, ax=ax[0, 0], label='$A_V$')
# mappable = ax[0, 1].scatter(test_table['gas_metallicity'], test_table['Ha'], c=test_table['Av'])
# plt.colorbar(mappable=mappable, ax=ax[0, 1], label='$A_V$')
#
# mappable = ax[1, 0].scatter(test_table['logU'], test_table['Nii'], c=test_table['Av'])
# plt.colorbar(mappable=mappable, ax=ax[1, 0], label='$A_V$')
# mappable = ax[1, 1].scatter(test_table['gas_metallicity'], test_table['Nii'], c=test_table['Av'])
# plt.colorbar(mappable=mappable, ax=ax[1, 1], label='$A_V$')
#
# ax[0, 0].set_xlabel(r'$\log U$')
# ax[0, 0].set_ylabel(r'$H\alpha$')
#
# ax[0, 1].set_xlabel(r'Metallicity')
# ax[0, 1].set_ylabel(r'$H\alpha$')
#
# ax[1, 0].set_xlabel(r'$\log U$')
# ax[1, 0].set_ylabel(r'$N\textsc{ii}$')
#
# ax[1, 1].set_xlabel(r'Metallicity')
# ax[1, 1].set_ylabel(r'$N\textsc{ii}$')
#
#
# fig, ax = plt.subplots(1, 2, figsize=(10, 5))
#
# flag = test_table['Av'] == 0.2
#
# ax[0].plot(test_table['logU'][flag], test_table['F275W'][flag]-test_table['F680N'][flag], label='$A_V=0.2$')
# ax[1].plot(test_table['gas_metallicity'][flag], test_table['F275W'][flag]-test_table['F680N'][flag], label='$A_V=0.2$')
#
# flag = test_table['Av'] == 0.6
#
# ax[0].plot(test_table['logU'][flag], test_table['F275W'][flag]-test_table['F680N'][flag], label='$A_V=0.6$')
# ax[1].plot(test_table['gas_metallicity'][flag], test_table['F275W'][flag]-test_table['F680N'][flag], label='$A_V=0.6$')
#
# plt.legend()
#
# ax[0].set_xlabel(r'$\log U$')
# ax[0].set_ylabel(r'F275W-F680N')
#
# ax[1].set_xlabel(r'Metallicity')
# ax[1].set_ylabel(r'F275W-F680N')
